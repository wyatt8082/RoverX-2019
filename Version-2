#include <EnableInterrupt.h>

#define SERIAL_PORT_SPEED 9600
#define RC_NUM_CHANNELS 8
#include <LiquidCrystal.h>

int pinRF = 27;
int pinRB = 28;
int pinLF = 29;
int pinLB = 30;

/*----------------------------------------------------------------------------------------------------------------------------- For LCD*/
 const int rs = 14, en = 21, d4 = 22, d5 = 23, d6 = 24, d7 = 25;
 LiquidCrystal lcd(rs,en,d4,d5,d6,d7);

int enA = 6;
int enB = 4;




// Adding list of macros for the number channels for accessing the specific channels
// in arrays
#define RC_CH1  0
#define RC_CH2  1
#define RC_CH3  2
#define RC_CH4  3

// Defines the pins that signals are connected to
#define RC_CH1_INPUT  A8
#define RC_CH2_INPUT  A9
#define RC_CH3_INPUT  A10
#define RC_CH4_INPUT  A11

uint16_t rc_values[RC_NUM_CHANNELS];
uint32_t  rc_start[RC_NUM_CHANNELS];
volatile uint16_t rc_shared[RC_NUM_CHANNELS];   // holds values for each channel until they
                                                // are copied to rc_values

void rc_read_values(){
  noInterrupts();
  memcpy(rc_values, (const void*)rc_shared, sizeof(rc_shared));
  interrupts();
}

void calc_input(uint8_t channel, uint8_t input_pin) {
  if (digitalRead(input_pin) == HIGH) {
    rc_start[channel] = micros();
  } else {
    uint16_t rc_compare = (uint16_t)(micros() - rc_start[channel]);
    rc_shared[channel] = rc_compare;
  }
}

void calc_ch1(){ calc_input(RC_CH1, RC_CH1_INPUT); }
void calc_ch2(){ calc_input(RC_CH2, RC_CH2_INPUT); }
void calc_ch3(){ calc_input(RC_CH3, RC_CH3_INPUT); }
void calc_ch4(){ calc_input(RC_CH4, RC_CH4_INPUT); }

void setup() {
  lcd.begin(16,2);
//lcd.print("Operation september 20th engaged");
pinMode(pinRF, OUTPUT);//Right side forward
pinMode(pinRB, OUTPUT);//Right side backard
pinMode(enA, OUTPUT);

pinMode(pinLF, OUTPUT);//Left side forward
pinMode(pinLB, OUTPUT);//Left side backward
pinMode(enB, OUTPUT);
  Serial.begin(SERIAL_PORT_SPEED);

  pinMode(RC_CH1_INPUT, INPUT);
  pinMode(RC_CH2_INPUT, INPUT);
  pinMode(RC_CH3_INPUT, INPUT);
  pinMode(RC_CH4_INPUT, INPUT);

  enableInterrupt(RC_CH1_INPUT, calc_ch1, CHANGE);
  enableInterrupt(RC_CH2_INPUT, calc_ch2, CHANGE);
  enableInterrupt(RC_CH3_INPUT, calc_ch3, CHANGE);
  enableInterrupt(RC_CH4_INPUT, calc_ch4, CHANGE);
}

void loop() {
  rc_read_values();

  Serial.print("CH1:"); Serial.print(rc_values[RC_CH1]); Serial.print("\t");
  Serial.print("CH2:"); Serial.print(rc_values[RC_CH2]); Serial.print("\t");
  Serial.print("CH3:"); Serial.print(rc_values[RC_CH3]); Serial.print("\t");
  Serial.print("CH4:"); Serial.print(rc_values[RC_CH4]); Serial.print("\t");
  Serial.print("A:"); Serial.print(digitalRead(pinA)); Serial.print("\t");  
  Serial.print("B:"); Serial.print(digitalRead(pinB)); Serial.print("\t");
  Serial.print("C:"); Serial.print(digitalRead(pinC)); Serial.print("\t");
  Serial.print("D:"); Serial.print(digitalRead(pinD)); Serial.print("\t");
  Serial.print("enA:"); Serial.print(digitalRead(enA)); Serial.print("\t");
  Serial.print("enB:"); Serial.println(digitalRead(enB));   

}

//void loop() {


//right();
//delay(500);
//STOP();
//delay(500);
//}

int forward(){
  digitalWrite(pinLF, HIGH);
  digitalWrite(pinRF, HIGH);
  digitalWrite(pinRB, LOW);
  digitalWrite(pinLB, LOW);
  analogWrite(enA, 1000.5);
  analogWrite(enB, 1000.5);     
  lcd.print("Going forward");                                                                                                   
  
}

int backward(){
  digitalWrite(pinRB, HIGH);
  digitalWrite(pinLB, HIGH);
   digitalWrite(pinLF, LOW);
  digitalWrite(pinRF, LOW);
  analogWrite(enA, 1000.5);
  analogWrite(enB, 1000.5);
  }

int left(){
   digitalWrite(pinRB, LOW);
  digitalWrite(pinLB, HIGH);
   digitalWrite(pinLF, LOW);
  digitalWrite(pinRF, HIGH);
  analogWrite(enA, 1000.5);
  analogWrite(enB, 1000.5);
}

int right(){
   digitalWrite(pinRB, HIGH);
  digitalWrite(pinLB, LOW);
   digitalWrite(pinLF, HIGH);
  digitalWrite(pinRF, LOW);
  analogWrite(enA, 1000.5);
  analogWrite(enB, 1000.5);
}

int STOP(){
   digitalWrite(pinRB, LOW);
  digitalWrite(pinLB, LOW);
   digitalWrite(pinLF, LOW);
  digitalWrite(pinRF, LOW);
  analogWrite(enA, 1000.5);
  analogWrite(enB, 1000.5);
}




